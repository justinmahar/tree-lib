(self.webpackChunkversatile_tree=self.webpackChunkversatile_tree||[]).push([[179],{"./src/stories/core/1.README.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>_1_README_stories});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)("h2",{align:"center"},"üå¥ Versatile Tree"),(0,esm.kt)("h3",{align:"center"},"A highly versatile tree structure for JavaScript."),(0,esm.kt)("p",{align:"center"},(0,esm.kt)("a",{href:"https://badge.fury.io/js/versatile-tree",target:"_blank",rel:"noopener noreferrer"},(0,esm.kt)("img",{src:"https://badge.fury.io/js/versatile-tree.svg",alt:"npm Version"})),"¬†",(0,esm.kt)("a",{href:"https://github.com/justinmahar/versatile-tree/",target:"_blank",rel:"noopener noreferrer"},(0,esm.kt)("img",{src:"https://img.shields.io/badge/GitHub-Source-success",alt:"View project on GitHub"})),"¬†",(0,esm.kt)("a",{href:"https://github.com/justinmahar/versatile-tree/actions?query=workflow%3ADeploy",target:"_blank",rel:"noopener noreferrer"},(0,esm.kt)("img",{src:"https://github.com/justinmahar/versatile-tree/workflows/Deploy/badge.svg",alt:"Deploy Status"})),"¬†",(0,esm.kt)("a",{href:"https://github.com/sponsors/justinmahar",target:"_blank",rel:"noopener noreferrer"},(0,esm.kt)("img",{src:"https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86",alt:"Sponsor"}))),(0,esm.kt)("h2",{id:"documentation"},"Documentation"),(0,esm.kt)("p",null,"Read the ",(0,esm.kt)("strong",{parentName:"p"},(0,esm.kt)("a",{parentName:"strong",href:"https://justinmahar.github.io/versatile-tree/",target:"_blank",rel:"nofollow noopener noreferrer"},"official documentation")),"."),(0,esm.kt)("h2",{id:"overview"},"Overview"),(0,esm.kt)("p",null,"This library contains a highly versatile tree structure for JavaScript."),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"TreeNode")," class is simple yet highly versatile: "),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"It can store arbitrary ",(0,esm.kt)("inlineCode",{parentName:"li"},"data")," and ",(0,esm.kt)("inlineCode",{parentName:"li"},"children")," and can be constructed from an object. "),(0,esm.kt)("li",{parentName:"ul"},"When not at the root, it can access its siblings, children, and root, and can be searched."),(0,esm.kt)("li",{parentName:"ul"},"It can be converted to an object, to JSON, and from JSON easily.")),(0,esm.kt)("p",null,"See the Quick Start section below for examples."),(0,esm.kt)("blockquote",null,(0,esm.kt)("p",{parentName:"blockquote"},"Note: A ",(0,esm.kt)("inlineCode",{parentName:"p"},"Tree")," alias exists for ",(0,esm.kt)("inlineCode",{parentName:"p"},"TreeNode")," -- in this library, they are interchangeable.")),(0,esm.kt)("h3",{id:"features-include"},"Features include:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"üå¥ Tree structure in JS"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},"Construct and use tree structures in JavaScript easily."))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"üîÅ Easy conversion to/from JSON"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},"Easily convert the entire tree, or a subsection, to and from JSON."))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"üéØ Node paths and selection paths"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},"Get a path array to any node, and get selection paths for selecting nodes in trees without node IDs."))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"üÜî IDs are optional"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},"Versatility is the name of the game. This tree library supports nodes without IDs!"))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Sibling support"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},"Get left/right siblings, or add a sibling at any index. Full sibling support!"))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"üîç Find and walk"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},"Find nodes by ID or custom logic, and walk the tree, visiting every node."))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"üìÑ Deep cloning"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},"Easily deep clone the entire tree, or any tree node."))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"‚ú® Much more!"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},"See the full API below!")))),(0,esm.kt)("h2",{id:"donate"},"Donate"),(0,esm.kt)("p",null,"If this project helped you, please consider buying me a coffee. Your support is much appreciated!"),(0,esm.kt)("a",{href:"https://paypal.me/thejustinmahar/5"},(0,esm.kt)("img",{src:"https://justinmahar.github.io/versatile-tree/support/coffee-1.png",alt:"Buy me a coffee",height:"35"}))," ",(0,esm.kt)("a",{href:"https://paypal.me/thejustinmahar/15"},(0,esm.kt)("img",{src:"https://justinmahar.github.io/versatile-tree/support/coffee-3.png",alt:"Buy me 3 coffees",height:"35"}))," ",(0,esm.kt)("a",{href:"https://paypal.me/thejustinmahar/25"},(0,esm.kt)("img",{src:"https://justinmahar.github.io/versatile-tree/support/coffee-5.png",alt:"Buy me 5 coffees",height:"35"})),(0,esm.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#documentation"},"Documentation")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#overview"},"Overview"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#features-include"},"Features include:")))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#donate"},"Donate")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#table-of-contents"},"Table of Contents")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#quick-start"},"Quick Start")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#treenodetree-api"},"TreeNode/Tree API"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#class-functions"},"Class Functions"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#constructor"},"Constructor")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getdata"},"getData")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getchildrenpropertyname"},"getChildrenPropertyName")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#hasparent"},"hasParent")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#isroot"},"isRoot")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#equals"},"equals")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#isdescendantof"},"isDescendantOf")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#isancestorof"},"isAncestorOf")))))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#-node--the-node-to-check-"},"| ",(0,esm.kt)("inlineCode",{parentName:"a"},"node")," | The node to check. |"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#addchildnode"},"addChildNode")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#addchilddata"},"addChildData")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getnodepath"},"getNodePath")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getselectionpath"},"getSelectionPath")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#selectnode"},"selectNode")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getchildren"},"getChildren")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#haschildren"},"hasChildren")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getfirstchild"},"getFirstChild")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getlastchild"},"getLastChild")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#haschild"},"hasChild")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#removechild"},"removeChild")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#removeparent"},"removeParent")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getsiblings"},"getSiblings")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getsiblingcount"},"getSiblingCount")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#isonlychild"},"isOnlyChild")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getfirstsibling"},"getFirstSibling")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getlastsibling"},"getLastSibling")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getleftsibling"},"getLeftSibling")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getrightsibling"},"getRightSibling")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#addsiblingnode"},"addSiblingNode")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#addsiblingdata"},"addSiblingData")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getindex"},"getIndex")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#indexofchild"},"indexOfChild")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#indexofsibling"},"indexOfSibling")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getparent"},"getParent")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#isparent"},"isParent")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#setparent"},"setParent")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#getroot"},"getRoot")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#findfirst"},"findFirst")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#findall"},"findAll")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#findbyid"},"findById")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#walk"},"walk")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#toobject"},"toObject")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#tojson"},"toJSON")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#clone"},"clone")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#static-functions"},"Static Functions"),(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#fromjson"},"fromJSON")))))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#typescript"},"TypeScript")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#icon-attribution"},"Icon Attribution")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#contributing"},"Contributing")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#-found-it-helpful-star-it"},"‚≠ê Found It Helpful? Star It!")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("a",{parentName:"li",href:"#license"},"License"))),(0,esm.kt)("h2",{id:"installation"},"Installation"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre"},"npm i versatile-tree\n")),(0,esm.kt)("h2",{id:"quick-start"},"Quick Start"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"import { TreeNode, Tree } from 'versatile-tree';\n\nconst tree = new Tree();\nconst node = tree.addChildData({id: 1});\nnode.addChildData({id: 2});\nnode.addSiblingData({id: 3})\n\n// Convert entire tree to JSON\nconst treeJson = node.getRoot().toJSON();\n\n// Build tree from JSON\nconst builtTree = TreeNode.fromJSON(treeJson);\n")),(0,esm.kt)("h2",{id:"treenodetree-api"},"TreeNode/Tree API"),(0,esm.kt)("p",null,"A ",(0,esm.kt)("inlineCode",{parentName:"p"},"Tree")," simply extends ",(0,esm.kt)("inlineCode",{parentName:"p"},"TreeNode")," and can be used as the root node. Both share the same API, defined below."),(0,esm.kt)("h3",{id:"class-functions"},"Class Functions"),(0,esm.kt)("h4",{id:"constructor"},"Constructor"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"new Tree(data: Record<string, any> = {}, options: TreeNodeOptions = TreeNode.defaultTreeNodeOptions)\n")),(0,esm.kt)("p",null,"Construct a new TreeNode using the provided data. The data can include arbitrary properties with an optional children array.\nThe default property name for the array of children is ",(0,esm.kt)("inlineCode",{parentName:"p"},'"children"'),". This can be customized via ",(0,esm.kt)("inlineCode",{parentName:"p"},"options.childrenPropertyName"),"."),(0,esm.kt)("p",null,"The constructor will recursively create TreeNodes for all children. All other properties will be stored as data for each node."),(0,esm.kt)("p",null,"For example, given a nested object such as:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"{ id: 1, children: [\n    { id: 2 },\n    { id: 3, children: [\n        { id: 4 },\n        { id: 5 }\n      ]\n    }\n  ]\n}\n")),(0,esm.kt)("p",null,"In this case, each node will have data containing the ",(0,esm.kt)("inlineCode",{parentName:"p"},"id")," property, and all children will be turned into TreeNodes themselves."),(0,esm.kt)("p",null,"To turn the TreeNode back into an object at a later time, use ",(0,esm.kt)("inlineCode",{parentName:"p"},"toObject()"),", and to turn it into a JSON string, use ",(0,esm.kt)("inlineCode",{parentName:"p"},"toJSON()"),".\nTo construct a TreeNode from JSON, use ",(0,esm.kt)("inlineCode",{parentName:"p"},"TreeNode.fromJSON()"),"."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"data")),(0,esm.kt)("td",{parentName:"tr",align:null},"Optional. An object containing data for the node, plus optional children with subnodes.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"options")),(0,esm.kt)("td",{parentName:"tr",align:null},"Optional (pun intended). The options for the TreeNode. Falls back on ",(0,esm.kt)("inlineCode",{parentName:"td"},"TreeNode.defaultTreeNodeOptions")," when not specified.")))),(0,esm.kt)("h4",{id:"getdata"},"getData"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getData()\n")),(0,esm.kt)("p",null,"Return the data for this node, without the children property."),(0,esm.kt)("p",null,"To get data and all descendants, including children, for this node, use ",(0,esm.kt)("inlineCode",{parentName:"p"},"toObject()"),"."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The data for this node, without the children property.")))),(0,esm.kt)("h4",{id:"getchildrenpropertyname"},"getChildrenPropertyName"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getChildrenPropertyName()\n")),(0,esm.kt)("p",null,"Returns the property name used for children."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The property name used for children.")))),(0,esm.kt)("h4",{id:"hasparent"},"hasParent"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"hasParent(): boolean\n")),(0,esm.kt)("p",null,"Returns true if this node has a parent, false otherwise."),(0,esm.kt)("p",null,"When a node has no parent, it is the root. You can also use ",(0,esm.kt)("inlineCode",{parentName:"p"},"isRoot()")," to check for this case."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if this node has a parent, false otherwise.")))),(0,esm.kt)("h4",{id:"isroot"},"isRoot"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"isRoot(): boolean\n")),(0,esm.kt)("p",null,"Returns true if this node is the root (has no parent), false otherwise."),(0,esm.kt)("p",null,"When a node has a parent, it is not the root. You can also use ",(0,esm.kt)("inlineCode",{parentName:"p"},"hasParent()")," to check for this case."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if this node is the root (has no parent), false otherwise.")))),(0,esm.kt)("h4",{id:"equals"},"equals"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"equals(node: TreeNode): boolean\n")),(0,esm.kt)("p",null,"Returns true if the provided node is equal to this node."),(0,esm.kt)("p",null,"This operation uses the equals function provided in the TreeNode options, and uses ",(0,esm.kt)("inlineCode",{parentName:"p"},"===")," equality by default when an equals function is not specified."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"node")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node to check for equality.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if the provided node is equal to this node.")))),(0,esm.kt)("h4",{id:"isdescendantof"},"isDescendantOf"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"isDescendantOf(node: TreeNode)\n")),(0,esm.kt)("p",null,"Returns true if this node is a descendant of, or below, the provided node. False otherwise."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"node")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node to check.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if this node is a descendant of, or below, the provided node. False otherwise.")))),(0,esm.kt)("h4",{id:"isancestorof"},"isAncestorOf"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"isAncestorOf(node: TreeNode)\n")),(0,esm.kt)("p",null,"Returns true if this node is an ancestor of, or above, the provided node. False otherwise."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"node")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node to check.")))),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("table",{parentName:"li"},(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if this node is an ancestor of, or above, the provided node. False otherwise.")))))),(0,esm.kt)("h4",{id:"addchildnode"},"addChildNode"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"addChildNode(node: TreeNode, index?: number, allowCircularReferences?: boolean)\n")),(0,esm.kt)("p",null,"Adds the provided node as a child of this node. If the provided node already has a parent, it will first be removed from its previous parent."),(0,esm.kt)("p",null,"You can specify an optional index at which to insert the child. If no index is provided, the child will be added to the end."),(0,esm.kt)("p",null,"In addition, if the provided node is an ancestor to this node, this node will be removed from its parent before adding the node as a child.\nThis prevents adding an ancestor as a child to create a loop, also known as a circular reference.\nYou disable this protection by setting ",(0,esm.kt)("inlineCode",{parentName:"p"},"allowCircularReferences")," to true."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"node")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node to add as a child.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"index")),(0,esm.kt)("td",{parentName:"tr",align:null},"Optional. The index at which to insert the child. If ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined"),", the child will be added to the end.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"allowCircularReferences")),(0,esm.kt)("td",{parentName:"tr",align:null},"Optional. Set to ",(0,esm.kt)("inlineCode",{parentName:"td"},"true")," to allow circular references.")))),(0,esm.kt)("h4",{id:"addchilddata"},"addChildData"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"addChildData(data: Record<string, any> = {}, index?: number): TreeNode\n")),(0,esm.kt)("p",null,"Creates a TreeNode with the data provided and adds it as a child. Returns the newly created TreeNode."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"data")),(0,esm.kt)("td",{parentName:"tr",align:null},"The child data. A new node will be created from this data.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"index")),(0,esm.kt)("td",{parentName:"tr",align:null},"The index at which to add the child. Pass ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined")," to add to the end of the children.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The newly created TreeNode.")))),(0,esm.kt)("h4",{id:"getnodepath"},"getNodePath"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getNodePath(): TreeNode[]\n")),(0,esm.kt)("p",null,"Returns an array containing all nodes in the tree leading to this one, starting with the root."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"An array containing all nodes in the tree leading to this one, starting with the root.")))),(0,esm.kt)("h4",{id:"getselectionpath"},"getSelectionPath"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getSelectionPath(): number[]\n")),(0,esm.kt)("p",null,"Return an array of sibling index positions of all nodes leading to this one.\nThis includes the root, which will always be the first item in the array with an index of ",(0,esm.kt)("inlineCode",{parentName:"p"},"0"),", as root siblings are prohibited."),(0,esm.kt)("p",null,"You can then use ",(0,esm.kt)("inlineCode",{parentName:"p"},"selectNode(selectionPath)")," to select this node at a later time. This is useful if your nodes do not have an ID and you want to reselect a node\nat a later time, or if your tree is large. It is much faster than a ",(0,esm.kt)("inlineCode",{parentName:"p"},"find()")," operation.\nThe speed of selection is constant time, O(1), as you know exactly where to find the node."),(0,esm.kt)("p",null,"For example, given a tree with the data:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"{ id: 1, children: [\n    { id: 2 },\n    { id: 3, children: [\n        { id: 4 },\n        { id: 5 }\n      ]\n    }\n  ]\n}\n")),(0,esm.kt)("p",null,"The selection path for the node with ",(0,esm.kt)("inlineCode",{parentName:"p"},"id: 4")," would be:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"[0, 1, 0]\n")),(0,esm.kt)("p",null,"Selecting the node using this path is nearly instantaneous."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"An array of sibling index positions of all nodes leading to this one.")))),(0,esm.kt)("h4",{id:"selectnode"},"selectNode"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"selectNode(selectionPath: number[]): TreeNode | undefined\n")),(0,esm.kt)("p",null,"Returns the TreeNode at the provided selection path, or ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined")," if the node at the provided selection path is not found."),(0,esm.kt)("p",null,"A selection path is an array of sibling index positions of all nodes leading to the desired node.\nThis includes the root, which will always be the first item in the array with an index of ",(0,esm.kt)("inlineCode",{parentName:"p"},"0"),", as root siblings are prohibited."),(0,esm.kt)("p",null,"This is useful if your nodes do not have an ID and you want to reselect a node\nat a later time, or if your tree is large. It is much faster than a ",(0,esm.kt)("inlineCode",{parentName:"p"},"find()")," operation.\nThe speed of selection is constant time, O(1), as you know exactly where to find the node."),(0,esm.kt)("p",null,"See ",(0,esm.kt)("inlineCode",{parentName:"p"},"getSelectionPath()")," for more."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"selectionPath")),(0,esm.kt)("td",{parentName:"tr",align:null},"The selection path for the TreeNode as an array of sibling indexes leading to the desired node.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The selected TreeNode, or ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined")," if not found.")))),(0,esm.kt)("h4",{id:"getchildren"},"getChildren"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getChildren(): TreeNode[]\n")),(0,esm.kt)("p",null,"Returns the children for this node."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The children for this node.")))),(0,esm.kt)("h4",{id:"haschildren"},"hasChildren"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"hasChildren(): boolean\n")),(0,esm.kt)("p",null,"Returns true if this node has children. False otherwise."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if this node has children. False otherwise.")))),(0,esm.kt)("h4",{id:"getfirstchild"},"getFirstChild"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getFirstChild(): TreeNode | undefined\n")),(0,esm.kt)("p",null,"Returns the first child in this node's list of children, or ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined")," if there are no children."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The first child in this node's list of children, or ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined")," if there are no children.")))),(0,esm.kt)("h4",{id:"getlastchild"},"getLastChild"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getLastChild(): TreeNode | undefined\n")),(0,esm.kt)("p",null,"Returns the last child in this node's list of children, or ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined")," if there are no children."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The last child in this node's list of children, or ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined")," if there are no children.")))),(0,esm.kt)("h4",{id:"haschild"},"hasChild"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"hasChild(node: TreeNode)\n")),(0,esm.kt)("p",null,"Returns true if this node has the provided node in its direct list of children. False otherwise."),(0,esm.kt)("p",null,"You can use ",(0,esm.kt)("inlineCode",{parentName:"p"},"isDescendant(node)")," to check for a child relationship along the entire tree hierarchy."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"node")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node to search for.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if this node has the provided node in its direct list of children. False otherwise.")))),(0,esm.kt)("h4",{id:"removechild"},"removeChild"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"removeChild(node: TreeNode): boolean\n")),(0,esm.kt)("p",null,"Removes the provided node from this node's list of children and sets the provided node's parent to ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,esm.kt)("p",null,"Returns ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," if the node was successfully removed. Returns ",(0,esm.kt)("inlineCode",{parentName:"p"},"false")," if the node was not found."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"node")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node to remove.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if the node was removed. False if it was not found.")))),(0,esm.kt)("h4",{id:"removeparent"},"removeParent"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"removeParent(): boolean\n")),(0,esm.kt)("p",null,"Removes this node from its parent and sets this node's parent to ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,esm.kt)("p",null,"Returns ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," if this node was successfully removed from its parent, ",(0,esm.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if this node was removed from its parent, false otherwise.")))),(0,esm.kt)("h4",{id:"getsiblings"},"getSiblings"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getSiblings(): TreeNode[]\n")),(0,esm.kt)("p",null,"Returns an array of all siblings for this node."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"An array of all siblings for this node.")))),(0,esm.kt)("h4",{id:"getsiblingcount"},"getSiblingCount"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getSiblingCount(): number\n")),(0,esm.kt)("p",null,"Returns the number of siblings this node has including itself."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The number of siblings this node has including itself.")))),(0,esm.kt)("h4",{id:"isonlychild"},"isOnlyChild"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"isOnlyChild(): boolean\n")),(0,esm.kt)("p",null,"Returns true if this node is an only child (has no other siblings), false otherwise."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if this node is an only child (has no other siblings), false otherwise.")))),(0,esm.kt)("h4",{id:"getfirstsibling"},"getFirstSibling"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getFirstSibling(): TreeNode\n")),(0,esm.kt)("p",null,"Returns the first sibling in this node's list of siblings."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The first sibling in this node's list of siblings.")))),(0,esm.kt)("h4",{id:"getlastsibling"},"getLastSibling"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getLastSibling(): TreeNode\n")),(0,esm.kt)("p",null,"Returns the last sibling in this node's list of siblings."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The last sibling in this node's list of siblings.")))),(0,esm.kt)("h4",{id:"getleftsibling"},"getLeftSibling"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getLeftSibling(): TreeNode | undefined\n")),(0,esm.kt)("p",null,"Returns the sibling to the left of this node, or ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined")," if there is none."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The sibling to the left of this node, or ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined")," if there is none.")))),(0,esm.kt)("h4",{id:"getrightsibling"},"getRightSibling"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getRightSibling(): TreeNode | undefined\n")),(0,esm.kt)("p",null,"Returns the sibling to the right of this node, or ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined")," if there is none."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The sibling to the right of this node, or ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined")," if there is none.")))),(0,esm.kt)("h4",{id:"addsiblingnode"},"addSiblingNode"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"addSiblingNode(node: TreeNode, index?: number)\n")),(0,esm.kt)("p",null,"Adds the provided node as a sibling to this node. You can specify an optional sibling index for the insertion, otherwise the sibling will be added to the end."),(0,esm.kt)("p",null,"If you attempt to call this function at the root, an error will be thrown, as root nodes cannot have siblings.\nTo prevent this, use ",(0,esm.kt)("inlineCode",{parentName:"p"},"isRoot()")," to check if you're at the root."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"node")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node to add as a sibling.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"index")),(0,esm.kt)("td",{parentName:"tr",align:null},"Optional. The index for the new sibling.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Errors Thrown"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"Throws an error if called at the root.")))),(0,esm.kt)("h4",{id:"addsiblingdata"},"addSiblingData"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"addSiblingData(data: Record<string, any> = {}, index?: number): TreeNode\n")),(0,esm.kt)("p",null,"Creates a TreeNode with the data provided and adds it as a sibling. Returns the newly created TreeNode."),(0,esm.kt)("p",null,"If you attempt to call this function at the root, an error will be thrown, as root nodes cannot have siblings.\nTo prevent this, use ",(0,esm.kt)("inlineCode",{parentName:"p"},"isRoot()")," to check if you're at the root."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"data")),(0,esm.kt)("td",{parentName:"tr",align:null},"The sibling data. A new node will be created from this data.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"index")),(0,esm.kt)("td",{parentName:"tr",align:null},"The index at which to add the sibling. Pass ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined")," to add to the end of the siblings.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The newly created TreeNode.")))),(0,esm.kt)("h4",{id:"getindex"},"getIndex"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getIndex(): number\n")),(0,esm.kt)("p",null,"Returns this node's index among its siblings."),(0,esm.kt)("p",null,"Note: The root will always have an index of ",(0,esm.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"This node's index among its siblings.")))),(0,esm.kt)("h4",{id:"indexofchild"},"indexOfChild"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"indexOfChild(node: TreeNode): number\n")),(0,esm.kt)("p",null,"Returns the index of the provided node in this node's list of children, or ",(0,esm.kt)("inlineCode",{parentName:"p"},"-1")," if it is not found."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"node")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node for which to find the index in this node's list of children.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The index of the provided node in this node's list of children, or ",(0,esm.kt)("inlineCode",{parentName:"td"},"-1")," if it is not found.")))),(0,esm.kt)("h4",{id:"indexofsibling"},"indexOfSibling"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"indexOfSibling(node: TreeNode): number\n")),(0,esm.kt)("p",null,"Returns the index of the provided node in this node's list of siblings, or ",(0,esm.kt)("inlineCode",{parentName:"p"},"-1")," if it is not found."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"node")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node for which to find the index in this node's list of siblings.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The index of the provided node in this node's list of siblings, or ",(0,esm.kt)("inlineCode",{parentName:"td"},"-1")," if it is not found.")))),(0,esm.kt)("h4",{id:"getparent"},"getParent"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getParent(): TreeNode | undefined\n")),(0,esm.kt)("p",null,"Returns the parent of this node, or ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined")," if there is none."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The parent of this node, or ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined")," if there is none.")))),(0,esm.kt)("h4",{id:"isparent"},"isParent"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"isParent(node: TreeNode)\n")),(0,esm.kt)("p",null,"Returns true if the provided node is this node's direct parent, false otherwise."),(0,esm.kt)("p",null,"You can use ",(0,esm.kt)("inlineCode",{parentName:"p"},"isAncestor(node)")," to check for a parental relationship along the entire tree hierarchy."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"node")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node to check.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if the provided node is this node's direct parent, false otherwise.")))),(0,esm.kt)("h4",{id:"setparent"},"setParent"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"setParent(parent: TreeNode | undefined): void\n")),(0,esm.kt)("p",null,"Sets the provided node as the parent of this node. If ",(0,esm.kt)("inlineCode",{parentName:"p"},"parent")," is ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined"),", this node will be removed from its parent."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"parent")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node to set as the new parent.")))),(0,esm.kt)("h4",{id:"getroot"},"getRoot"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"getRoot(): TreeNode\n")),(0,esm.kt)("p",null,"Returns the root node at the top of the tree hierarchy."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The root node at the top of the tree hierarchy.")))),(0,esm.kt)("h4",{id:"findfirst"},"findFirst"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"findFirst(predicate: (node: TreeNode) => boolean, rightToLeft?: boolean): TreeNode | undefined\n")),(0,esm.kt)("p",null,"Searches the tree node and its children for the first node that passes the test defined by the matcher function provided."),(0,esm.kt)("p",null,"The found node is returned. If not found, ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined")," is returned."),(0,esm.kt)("p",null,"The find algorithm uses ",(0,esm.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR",target:"_blank",rel:"nofollow noopener noreferrer"},"depth-first left-to-right preorder traversal")," by default.\nYou can pass ",(0,esm.kt)("inlineCode",{parentName:"p"},"rightToLeft")," argument as ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," to use ",(0,esm.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tree_traversal#Reverse_pre-order,_NRL",target:"_blank",rel:"nofollow noopener noreferrer"},"depth-first right-to-left preorder traversal")," instead."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"predicate")),(0,esm.kt)("td",{parentName:"tr",align:null},"A function used to match the node being searched for. This function is passed a node and returns true if the node is a match.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"rightToLeft")),(0,esm.kt)("td",{parentName:"tr",align:null},"Optional. When true, searching will traverse the tree using depth-first right-to-left preorder traversal.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The found node, or ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined")," if not found.")))),(0,esm.kt)("h4",{id:"findall"},"findAll"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"findAll(predicate: (node: TreeNode) => boolean, rightToLeft?: boolean): TreeNode[]\n")),(0,esm.kt)("p",null,"Searches the tree node and its children for all nodes that pass the test defined by the matcher function provided."),(0,esm.kt)("p",null,"The found nodes are returned as an array of TreeNode."),(0,esm.kt)("p",null,"The find algorithm uses ",(0,esm.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR",target:"_blank",rel:"nofollow noopener noreferrer"},"depth-first left-to-right preorder traversal")," by default.\nYou can pass ",(0,esm.kt)("inlineCode",{parentName:"p"},"rightToLeft")," argument as ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," to use ",(0,esm.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tree_traversal#Reverse_pre-order,_NRL",target:"_blank",rel:"nofollow noopener noreferrer"},"depth-first right-to-left preorder traversal")," instead."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"predicate")),(0,esm.kt)("td",{parentName:"tr",align:null},"A function used to match the nodes being searched for. This function is passed a node and returns true if the node is a match.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"rightToLeft")),(0,esm.kt)("td",{parentName:"tr",align:null},"Optional. When true, searching will traverse the tree using depth-first right-to-left preorder traversal.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"A ",(0,esm.kt)("inlineCode",{parentName:"td"},"TreeNode[]")," array containing all found nodes.")))),(0,esm.kt)("h4",{id:"findbyid"},"findById"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"findById(id: any, idPropertyName = 'id', rightToLeft?: boolean): TreeNode | undefined\n")),(0,esm.kt)("p",null,"Finds and returns the node with the provided id (using ",(0,esm.kt)("inlineCode",{parentName:"p"},"===")," comparison), or returns ",(0,esm.kt)("inlineCode",{parentName:"p"},"undefined")," if not found."),(0,esm.kt)("p",null,'Uses "id" as the property name by default, or you can provide the ID property name using\nthe ',(0,esm.kt)("inlineCode",{parentName:"p"},"idPropertyName")," argument."),(0,esm.kt)("p",null,"The find algorithm uses ",(0,esm.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR",target:"_blank",rel:"nofollow noopener noreferrer"},"depth-first left-to-right preorder traversal")," by default.\nYou can pass ",(0,esm.kt)("inlineCode",{parentName:"p"},"rightToLeft")," argument as ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," to use ",(0,esm.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tree_traversal#Reverse_pre-order,_NRL",target:"_blank",rel:"nofollow noopener noreferrer"},"depth-first right-to-left preorder traversal")," instead."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"id")),(0,esm.kt)("td",{parentName:"tr",align:null},"The node ID to search for.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"idPropertyName")),(0,esm.kt)("td",{parentName:"tr",align:null},'Optional. The property name of the ID. Defaults as "id".')),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"rightToLeft")),(0,esm.kt)("td",{parentName:"tr",align:null},"Optional. When true, searching will traverse the tree using depth-first right-to-left preorder traversal.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"The node with the provided id, or ",(0,esm.kt)("inlineCode",{parentName:"td"},"undefined")," if not found.")))),(0,esm.kt)("h4",{id:"walk"},"walk"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"walk(visit: (node: TreeNode) => boolean | void, rightToLeft?: boolean): boolean\n")),(0,esm.kt)("p",null,"Walk the tree node and its children, calling the visit function on each node."),(0,esm.kt)("p",null,"If the visit function returns true at any point, walking is aborted."),(0,esm.kt)("p",null,"The walk algorithm uses ",(0,esm.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR",target:"_blank",rel:"nofollow noopener noreferrer"},"depth-first left-to-right preorder traversal")," by default.\nYou can pass ",(0,esm.kt)("inlineCode",{parentName:"p"},"rightToLeft")," argument as ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," to use ",(0,esm.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tree_traversal#Reverse_pre-order,_NRL",target:"_blank",rel:"nofollow noopener noreferrer"},"depth-first right-to-left preorder traversal")," instead."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"visit")),(0,esm.kt)("td",{parentName:"tr",align:null},"A visit function called on every node traversed. If the visit function returns true at any point, walking is aborted.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"rightToLeft")),(0,esm.kt)("td",{parentName:"tr",align:null},"Optional. When true, it will traverse the tree using depth-first right-to-left preorder traversal.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"True if the traversal was aborted, false otherwise.")))),(0,esm.kt)("h4",{id:"toobject"},"toObject"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"toObject(): Record<string, any>\n")),(0,esm.kt)("p",null,"Returns an object containing the tree node data including all nested children."),(0,esm.kt)("p",null,"Note: Parents, if any, are not included."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"An object containing the tree node data including all nested children.")))),(0,esm.kt)("h4",{id:"tojson"},"toJSON"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"toJSON(): string\n")),(0,esm.kt)("p",null,"Returns a JSON string of an object containing the tree node data including all nested children.\nParents, if any, are not included."),(0,esm.kt)("p",null,"This is accomplished by stringifying the tree node's ",(0,esm.kt)("inlineCode",{parentName:"p"},"toObject()")," value.\nAs such, all data in the tree node must support ",(0,esm.kt)("inlineCode",{parentName:"p"},"JSON.stringify()")," or an error will be thrown."),(0,esm.kt)("p",null,"@see You can use ",(0,esm.kt)("inlineCode",{parentName:"p"},"TreeNode.fromJSON()")," to construct a tree node from the resulting JSON output.\n@see If you'd like to clone the tree node, you can simply use ",(0,esm.kt)("inlineCode",{parentName:"p"},"clone()")," which converts to JSON and back to a TreeNode for you."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"A JSON string of an object containing the tree node data including all nested children.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Errors Thrown"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"An error if the tree node data cannot be converted to a string using ",(0,esm.kt)("inlineCode",{parentName:"td"},"JSON.stringify()"),".")))),(0,esm.kt)("h4",{id:"clone"},"clone"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"clone(): TreeNode\n")),(0,esm.kt)("p",null,"Returns a deep clone of the tree node, including all children. Parents, if any, are not included."),(0,esm.kt)("p",null,"This is accomplished by stringifying the tree node's ",(0,esm.kt)("inlineCode",{parentName:"p"},"toObject()")," value, and then parsing the resulting JSON string to create an entirely new tree node.\nAs such, all data in the tree node must support ",(0,esm.kt)("inlineCode",{parentName:"p"},"JSON.stringify()")," or an error will be thrown."),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"A deep clone of the tree node, including all children.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Errors Thrown"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"An error if ",(0,esm.kt)("inlineCode",{parentName:"td"},"JSON.stringify()")," fails on the tree node.")))),(0,esm.kt)("h3",{id:"static-functions"},"Static Functions"),(0,esm.kt)("h4",{id:"fromjson"},"fromJSON"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"TreeNode.fromJSON(dataString: string, options: TreeNodeOptions = TreeNode.defaultTreeNodeOptions): TreeNode\n")),(0,esm.kt)("p",null,"Parses the provided data string, which contains an object with nested children, and creates a tree node from the resulting parsed object."),(0,esm.kt)("p",null,"JSON example:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "children": [{ "id": 2 }, { "id": 3, "children": [{ "id": 4 }, { "id": 5 }] }]\n}\n')),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Param"),(0,esm.kt)("th",{parentName:"tr",align:null},"Description"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"dataString")),(0,esm.kt)("td",{parentName:"tr",align:null},"The JSON data string containing an object with nested children.")),(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},(0,esm.kt)("inlineCode",{parentName:"td"},"options")),(0,esm.kt)("td",{parentName:"tr",align:null},"Optional. The options for the TreeNode.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Returns"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"A TreeNode constructed from the parsed JSON.")))),(0,esm.kt)("table",null,(0,esm.kt)("thead",{parentName:"table"},(0,esm.kt)("tr",{parentName:"thead"},(0,esm.kt)("th",{parentName:"tr",align:null},"Errors Thrown"))),(0,esm.kt)("tbody",{parentName:"table"},(0,esm.kt)("tr",{parentName:"tbody"},(0,esm.kt)("td",{parentName:"tr",align:null},"An error if JSON parsing fails.")))),(0,esm.kt)("h2",{id:"typescript"},"TypeScript"),(0,esm.kt)("p",null,"Type definitions have been included for ",(0,esm.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/",target:"_blank",rel:"nofollow noopener noreferrer"},"TypeScript")," support."),(0,esm.kt)("h2",{id:"icon-attribution"},"Icon Attribution"),(0,esm.kt)("p",null,"Favicon by ",(0,esm.kt)("a",{parentName:"p",href:"https://github.com/twitter/twemoji",target:"_blank",rel:"nofollow noopener noreferrer"},"Twemoji"),"."),(0,esm.kt)("h2",{id:"contributing"},"Contributing"),(0,esm.kt)("p",null,"Open source software is awesome and so are you. üòé"),(0,esm.kt)("p",null,"Feel free to submit a pull request for bugs or additions, and make sure to update tests as appropriate. If you find a mistake in the docs, send a PR! Even the smallest changes help."),(0,esm.kt)("p",null,"For major changes, open an issue first to discuss what you'd like to change."),(0,esm.kt)("h2",{id:"-found-it-helpful-star-it"},"‚≠ê Found It Helpful? ",(0,esm.kt)("a",{parentName:"h2",href:"https://github.com/justinmahar/versatile-tree/stargazers",target:"_blank",rel:"nofollow noopener noreferrer"},"Star It!")),(0,esm.kt)("p",null,"If you found this project helpful, let the community know by giving it a ",(0,esm.kt)("a",{parentName:"p",href:"https://github.com/justinmahar/versatile-tree/stargazers",target:"_blank",rel:"nofollow noopener noreferrer"},"star"),": ",(0,esm.kt)("a",{parentName:"p",href:"https://github.com/justinmahar/versatile-tree/stargazers",target:"_blank",rel:"nofollow noopener noreferrer"},"üëâ‚≠ê")),(0,esm.kt)("h2",{id:"license"},"License"),(0,esm.kt)("p",null,"See ",(0,esm.kt)("a",{parentName:"p",href:"https://justinmahar.github.io/versatile-tree/?path=/story/license--page",target:"_blank",rel:"nofollow noopener noreferrer"},"LICENSE.md"),"."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var _1_README_stories_excluded=["components"];function _1_README_stories_extends(){return _1_README_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_1_README_stories_extends.apply(this,arguments)}function _1_README_stories_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _1_README_stories_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var _1_README_stories_layoutProps={};function _1_README_stories_MDXContent(_ref){var components=_ref.components,props=_1_README_stories_objectWithoutProperties(_ref,_1_README_stories_excluded);return(0,esm.kt)("wrapper",_1_README_stories_extends({},_1_README_stories_layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Home",mdxType:"Meta"}),(0,esm.kt)(MDXContent,{mdxType:"Readme"}))}_1_README_stories_MDXContent.displayName="MDXContent",_1_README_stories_MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Home",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(_1_README_stories_MDXContent,null))}});const _1_README_stories=componentMeta;var __namedExportsOrder=["__page"]},"./src/stories/core/2.CODE_OF_CONDUCT.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>_2_CODE_OF_CONDUCT_stories});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)("h1",{id:"contributor-covenant-code-of-conduct"},"Contributor Covenant Code of Conduct"),(0,esm.kt)("h2",{id:"our-pledge"},"Our Pledge"),(0,esm.kt)("p",null,"We as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation."),(0,esm.kt)("p",null,"We pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community."),(0,esm.kt)("h2",{id:"our-standards"},"Our Standards"),(0,esm.kt)("p",null,"Examples of behavior that contributes to a positive environment for our\ncommunity include:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"Demonstrating empathy and kindness toward other people"),(0,esm.kt)("li",{parentName:"ul"},"Being respectful of differing opinions, viewpoints, and experiences"),(0,esm.kt)("li",{parentName:"ul"},"Giving and gracefully accepting constructive feedback"),(0,esm.kt)("li",{parentName:"ul"},"Accepting responsibility and apologizing to those affected by our mistakes,\nand learning from the experience"),(0,esm.kt)("li",{parentName:"ul"},"Focusing on what is best not just for us as individuals, but for the overall\ncommunity")),(0,esm.kt)("p",null,"Examples of unacceptable behavior include:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"The use of sexualized language or imagery, and sexual attention or advances of\nany kind"),(0,esm.kt)("li",{parentName:"ul"},"Trolling, insulting or derogatory comments, and personal or political attacks"),(0,esm.kt)("li",{parentName:"ul"},"Public or private harassment"),(0,esm.kt)("li",{parentName:"ul"},"Publishing others' private information, such as a physical or email address,\nwithout their explicit permission"),(0,esm.kt)("li",{parentName:"ul"},"Other conduct which could reasonably be considered inappropriate in a\nprofessional setting")),(0,esm.kt)("h2",{id:"enforcement-responsibilities"},"Enforcement Responsibilities"),(0,esm.kt)("p",null,"Community leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful."),(0,esm.kt)("p",null,"Community leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate."),(0,esm.kt)("h2",{id:"scope"},"Scope"),(0,esm.kt)("p",null,"This Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event."),(0,esm.kt)("h2",{id:"enforcement"},"Enforcement"),(0,esm.kt)("p",null,"Instances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement.\nAll complaints will be reviewed and investigated promptly and fairly."),(0,esm.kt)("p",null,"All community leaders are obligated to respect the privacy and security of the\nreporter of any incident."),(0,esm.kt)("h2",{id:"enforcement-guidelines"},"Enforcement Guidelines"),(0,esm.kt)("p",null,"Community leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:"),(0,esm.kt)("h3",{id:"1-correction"},"1. Correction"),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Community Impact"),": Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Consequence"),": A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested."),(0,esm.kt)("h3",{id:"2-warning"},"2. Warning"),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Community Impact"),": A violation through a single incident or series of\nactions."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Consequence"),": A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban."),(0,esm.kt)("h3",{id:"3-temporary-ban"},"3. Temporary Ban"),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Community Impact"),": A serious violation of community standards, including\nsustained inappropriate behavior."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Consequence"),": A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban."),(0,esm.kt)("h3",{id:"4-permanent-ban"},"4. Permanent Ban"),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Community Impact"),": Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Consequence"),": A permanent ban from any sort of public interaction within the\ncommunity."),(0,esm.kt)("h2",{id:"attribution"},"Attribution"),(0,esm.kt)("p",null,"This Code of Conduct is adapted from the ",(0,esm.kt)("a",{parentName:"p",href:"https://www.contributor-covenant.org",target:"_blank",rel:"nofollow noopener noreferrer"},"Contributor Covenant"),",\nversion 2.1, available at\n",(0,esm.kt)("a",{parentName:"p",href:"https://www.contributor-covenant.org/version/2/1/code_of_conduct.html",target:"_blank",rel:"nofollow noopener noreferrer"},"https://www.contributor-covenant.org/version/2/1/code_of_conduct.html"),"."),(0,esm.kt)("p",null,"Community Impact Guidelines were inspired by\n",(0,esm.kt)("a",{parentName:"p",href:"https://github.com/mozilla/diversity",target:"_blank",rel:"nofollow noopener noreferrer"},"Mozilla's code of conduct enforcement ladder"),"."),(0,esm.kt)("p",null,"For answers to common questions about this code of conduct, see the FAQ at\n",(0,esm.kt)("a",{parentName:"p",href:"https://www.contributor-covenant.org/faq",target:"_blank",rel:"nofollow noopener noreferrer"},"https://www.contributor-covenant.org/faq"),". Translations are available at\n",(0,esm.kt)("a",{parentName:"p",href:"https://www.contributor-covenant.org/translations",target:"_blank",rel:"nofollow noopener noreferrer"},"https://www.contributor-covenant.org/translations"),"."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var _2_CODE_OF_CONDUCT_stories_excluded=["components"];function _2_CODE_OF_CONDUCT_stories_extends(){return _2_CODE_OF_CONDUCT_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_2_CODE_OF_CONDUCT_stories_extends.apply(this,arguments)}function _2_CODE_OF_CONDUCT_stories_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _2_CODE_OF_CONDUCT_stories_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var _2_CODE_OF_CONDUCT_stories_layoutProps={};function _2_CODE_OF_CONDUCT_stories_MDXContent(_ref){var components=_ref.components,props=_2_CODE_OF_CONDUCT_stories_objectWithoutProperties(_ref,_2_CODE_OF_CONDUCT_stories_excluded);return(0,esm.kt)("wrapper",_2_CODE_OF_CONDUCT_stories_extends({},_2_CODE_OF_CONDUCT_stories_layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Code of Conduct",mdxType:"Meta"}),(0,esm.kt)(MDXContent,{mdxType:"CodeOfConduct"}))}_2_CODE_OF_CONDUCT_stories_MDXContent.displayName="MDXContent",_2_CODE_OF_CONDUCT_stories_MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Code of Conduct",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(_2_CODE_OF_CONDUCT_stories_MDXContent,null))}});const _2_CODE_OF_CONDUCT_stories=componentMeta;var __namedExportsOrder=["__page"]},"./src/stories/core/3.LICENSE.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>_3_LICENSE_stories});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)("p",null,"MIT License"),(0,esm.kt)("p",null,"Copyright ¬© 2023 Justin Mahar ",(0,esm.kt)("a",{parentName:"p",href:"https://github.com/justinmahar",target:"_blank",rel:"nofollow noopener noreferrer"},"https://github.com/justinmahar")),(0,esm.kt)("p",null,'Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:'),(0,esm.kt)("p",null,"The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software."),(0,esm.kt)("p",null,'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.'))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var _3_LICENSE_stories_excluded=["components"];function _3_LICENSE_stories_extends(){return _3_LICENSE_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_3_LICENSE_stories_extends.apply(this,arguments)}function _3_LICENSE_stories_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _3_LICENSE_stories_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var _3_LICENSE_stories_layoutProps={};function _3_LICENSE_stories_MDXContent(_ref){var components=_ref.components,props=_3_LICENSE_stories_objectWithoutProperties(_ref,_3_LICENSE_stories_excluded);return(0,esm.kt)("wrapper",_3_LICENSE_stories_extends({},_3_LICENSE_stories_layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"License",mdxType:"Meta"}),(0,esm.kt)("style",null,"\n   .sbdocs {\n    font-family: monospace !important;\n  }"),(0,esm.kt)(MDXContent,{mdxType:"License"}))}_3_LICENSE_stories_MDXContent.displayName="MDXContent",_3_LICENSE_stories_MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"License",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(_3_LICENSE_stories_MDXContent,null))}});const _3_LICENSE_stories=componentMeta;var __namedExportsOrder=["__page"]},"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:()=>__namedExportsOrder,parameters:()=>parameters});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}},__namedExportsOrder=["parameters"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.uc)(value);case"argTypes":return(0,ClientApi.v9)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},"./src/stories/core sync ^\\.[\\\\/](?:1\\.README\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./1.README.stories.mdx":"./src/stories/core/1.README.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src/stories/core sync ^\\.[\\\\/](?:1\\.README\\.stories\\.mdx)$"},"./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$",module.exports=webpackEmptyContext},"./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./stories/core/1.README.stories.mdx":"./src/stories/core/1.README.stories.mdx","./stories/core/2.CODE_OF_CONDUCT.stories.mdx":"./src/stories/core/2.CODE_OF_CONDUCT.stories.mdx","./stories/core/3.LICENSE.stories.mdx":"./src/stories/core/3.LICENSE.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"?4f7e":()=>{},"./generated-stories-entry.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./src/stories/core sync ^\\.[\\\\/](?:1\\.README\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[489],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs"))));__webpack_require__.O()}]);